{% extends 'base/site.html' %}
{% block page %}
<p class="text-xl">Average number of players and admins, hourly, by day of week, over the last 30 days</p>
<p>Click on an item in the legend below to hide it from the chart (e.g. hide all player counts to see admins only)</p>
<p class="text-sm">(This page is a work in progress)</p>
<hr class="my-4 border-gray-300 dark:border-gray-700">
<div class="chart-container w-1/2">
    <canvas id="playerchart"></canvas>
</div>
{% endblock %}
{% block script %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.bundle.min.js"
  integrity="sha512-SuxO9djzjML6b9w9/I07IWnLnQhgyYVSpHZx0JV97kGBfTIsUYlWflyuW4ypnvhBrslz1yJ3R+S14fdCWmSmSA=="
  crossorigin="anonymous"></script>
<script>
  function hashCode(str) {
    return '' + Array.from(str)
      .reduce((s, c) => Math.imul(31, s) + c.charCodeAt(0) | 0, 0)
  }
fetch("?json=true", {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
    },
  })
    .then((res) => res.json())
    .then((res) => {
      console.log(res.pop)
      player = []
      sets = []
      for([key, server] of Object.entries(res.pop.servers)){
        sets.push({
          data: server.players,
          label: key + ' Players',
          fill: false,
          backgroundColor: '#'+server.playercolor,
          borderColor: '#'+server.playercolor,
          yAxisID: 'player-axis',
        })
        sets.push({
          data: server.admins,
          label: key + ' Admins',
          fill: false,
          backgroundColor: '#'+server.admincolor,
          borderColor: '#'+server.admincolor,
          yAxisID: 'admin-axis',
        })
      }
      dates = []
      for([key, date] of Object.entries(res.pop.dates)){
        dates.push(date)
      }
      config = {
        type: 'radar',
        data: {
          labels: dates,
          datasets: sets
        },
        options: {
          responsive: true,
          tooltips: {
						position: 'nearest',
						intersect: false,
            callbacks: {
                title: function() {return false},
                afterLabel: function(tooltipItem, data) {
                  console.log(tooltipItem)
                    return 'at ' + data.labels[tooltipItem.index] + ' UTC';
                }
            }
					},
          scales: {
						yAxes: [{
							display: false,
							position: 'left',
							id: 'player-axis',
						}, {
              display: false,
							id: 'admin-axis',
              type: 'linear',
						}],
					}
        }
      };
      var ctx = document.getElementById('playerchart').getContext('2d');
      var chart = new Chart(ctx, config);
    });
</script>

{% endblock %}